[tool.poetry]
name = "rakvzan-best-hackath0n-2025"
version = "0.1.0"
description = ""
authors = ["Oleksandr Yanchar <contact.oleksandryanchar@gmail.com>"]
readme = "README.md"
package-mode = false


[tool.poetry.dependencies]
python = ">=3.12,<3.13"
gunicorn = { version = "23.0.0", markers = "python_version >= '3.11' and python_version < '4'" }
django-ninja = { version = "1.3.0", markers = "python_version >= '3.11' and python_version < '4'" }
django-ninja-extra = { version = "0.22.2", markers = "python_version >= '3.11' and python_version < '4'" }
django-ninja-jwt = { version = "5.3.5", markers = "python_version >= '3.11' and python_version < '4'" }
ninja-schema = { version = "0.14.1", markers = "python_version >= '3.11' and python_version < '4'" }
django-environ = { version = "0.11.2", markers = "python_version >= '3.11' and python_version < '4'" }
djangorestframework = { version = "3.15.2", markers = "python_version >= '3.11' and python_version < '4'" }
djangorestframework-simplejwt = { version = "5.3.1", markers = "python_version >= '3.11' and python_version < '4'" }
djangorestframework-camel-case = { version = "1.4.2", markers = "python_version >= '3.11' and python_version < '4'" }
django-extensions = { version = "3.2.3", markers = "python_version >= '3.11' and python_version < '4'" }
drf-yasg = { version = "1.21.8", markers = "python_version >= '3.11' and python_version < '4'" }
django = { version = "5.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
psycopg2-binary = { version = "2.9.9", markers = "python_version >= '3.11' and python_version < '4.0'" }
pydantic-core = { version = "2.14.6", markers = "python_version >= '3.11' and python_version < '4.0'" }
pydantic = { version = "2.5.3", markers = "python_version >= '3.11' and python_version < '4.0'" }
sqlparse = { version = "0.4.4", markers = "python_version >= '3.11' and python_version < '4.0'" }
typing-extensions = { version = "4.9.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
tzdata = { version = "2023.4", markers = "python_version >= '3.11' and python_version < '4.0' and sys_platform == 'win32'" }
django-split-settings = { version = "1.3.2", markers = "python_version >= '3.11' and python_version < '4.0'" }
django-cachalot = { version = "2.6.3", markers = "python_version >= '3.11' and python_version < '4.0'" }
factory-boy = { version = "3.3.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
pillow = { version = "11.1.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
celery = { extras = ["redis"], version = "5.4.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
flower = { version = "2.0.1", markers = "python_version >= '3.11' and python_version < '4.0'" }
celery_singleton = { version = "0.3.1", markers = "python_version >= '3.11' and python_version < '4.0'" }
django-redis = { version = "5.4.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
elastic-apm = { version = "6.23.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
django-elasticsearch-dsl = { version = "7.4.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
elasticsearch = { version = "7.10.1", markers = "python_version >= '3.11' and python_version < '4.0'" }
channels = { version = "4.1.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
channels-redis = { version = "4.2.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
djangochannelsrestframework = { version = "1.2.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
daphne = { version = "4.1.2", markers = "python_version >= '3.11' and python_version < '4.0'" }
django-ratelimit = { version = "4.1.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
django-otp = { version = "1.5.4", markers = "python_version >= '3.11' and python_version < '4.0'" }
qrcode = { version = "8.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
pyotp = { version = "2.9.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
pre-commit = { version = "3.8.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
google-auth = { version = "2.38.0", markers = "python_version >= '3.11' and python_version < '4.0'" }
requests =  { version = "2.32.3", markers = "python_version >= '3.11' and python_version < '4.0'" }
django-cors-headers =  { version = "4.3.1", markers = "python_version >= '3.11' and python_version < '4.0'" }

[tool.poetry.dev-dependencies]
mypy = "1.8.0"
django-stubs = "4.2.7"
black = "23.12.1"
flake8 = "6.1.0"
isort = "5.13.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
